# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'

    database.url.phpVDB: '@db.url.phpVDB@'
    imported_1c_csv_resource: '@imp.1c.csv.resource@'
    remote_server.url: '@rser@'
    remote_server.login: '@rser.login@'
    remote_server.pass: '@rser.pass@'

    hds.host: '@hds.server@'
    hds.database: '@hds.db@'
    hds.login: '@hds.user@'
    hds.pass: '@hds.password@'


services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.
        # setup special, global autowiring rules
        bind:
            $inventoryLogger: '@monolog.logger.inventory'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{Entity,Migrations,Tests}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\Provider\Impl\Resource1cProviderImpl:
        arguments:
            $importedCsvResource: '%imported_1c_csv_resource%'
            $remoteServerUrl: '%remote_server.url%'
            $ftpLogin: '%remote_server.login%'
            $ftpPass: '%remote_server.pass%'
            $projectDir: '%kernel.project_dir%'

    App\Provider\Impl\AgentsDnFromHdsProviderImpl:
        arguments:
            $hdsHost: '%hds.host%'
            $hdsDatabase: '%hds.database%'
            $hdsLogin: '%hds.login%'
            $hdsPass: '%hds.pass%'

    App\Service\ImportAgentsDnService\AgentsDnImporterService: '@app.import.agents_dn'

    app.import.agents_dn:
        class: App\Service\ImportAgentsDnService\Impl\AgentsDnImporterServiceImpl


